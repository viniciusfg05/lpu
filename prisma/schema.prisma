// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Category {
  id   String @id @default(uuid())
  name String @unique

  subCategories SubCategory[]

  @@map("categories")
}

model SubCategory {
  id   String @id @default(uuid())
  name String @unique

  category    Category @relation(fields: [category_id], references: [id])
  category_id String

  services Service[]

  @@map("sub_categories")
}

model Service {
  id String @id @default(uuid())

  lp_id       String @unique
  description String @db.Text
  unit        String // e.g., "mÂ²", "unidade"
  value       Float // store as float for calculations

  subcategory     SubCategory @relation(fields: [sub_category_id], references: [id])
  sub_category_id String

  @@map("services")
}

model Project {
  id          String @id @default(uuid())
  name        String
  description String @db.Text
  totalValue  Float?
  branch      String

  budget Budget[]

  @@map("projects")
}

model Budget {
  id    String @id @default(uuid())
  value Float

  project_id String
  project    Project @relation(fields: [project_id], references: [id])

  services_per_project ServicesPerProject[]

  @@map("budgets")
}

model ServicesPerProject {
  id    String @id @default(uuid())
  lp_id String
  unit Float
  type_unit String?
  description String?
  value_per_unit Float?
  valueTotal Float?

  budget_id String
  budget    Budget @relation(fields: [budget_id], references: [id])

  @@map("services_per_project")
}
